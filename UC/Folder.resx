<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbDelete.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAGdSURBVEhLpZYxTgQxDEXnIBQUHIeCw1BsB0gUFEiwcAAoOAISHAAJCiQKtoc7UFCABP+N5g/Z
        bJLxiC99KZvY34mdeLabwI64L96Jb+Kn+DGMmWMNm9nA6Ur8GbgSr8UT8XQYM+d1bMOB9kR2yW6PxS2x
        Btaw8cnwbeJIZEdPYks4B7b44HvARAlE95GXTMzEhYjvt7jLRIptkSM+iIhjeCZGgS0+lyInQQvNETci
        eXRazsVoEIvjA9BAi4vQg+pjcNj/+kMkSC5uUHjm+5u1GH6UitoKUhMHaLHGO+nuxWcGFZSCtMQN3skt
        g3dxzFcFaZCIOEAT7e5L5IVOwUEi4oAXz20KB/DOfZIpjAEiKUrTkqarhTFFFPmFQQWlnEeCvIp9kVvX
        tCRutIKsXdPaQ2uJG7Ug1JTaji08bxURcSMPgsZaqwBudo+iu2JE3HAQfNHYaHYgbdd0xbnAB99iuzb4
        WGDELkpFrwFbfBCvfnCM/3wyqzvPQfUpklPGnebDzuuEjJnzOrYbOY+AQNxlHiOvkl1CxsxN/G3pul/P
        G6YnUjGO2wAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pbPlay.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAHWSURBVEhLndWxThVBFAbgLSwseAALCgsegceg8DEsKSwsKUyksCTRThMKSLTTRAoTLEggkYIE
        en0HCwsK+L/Nzgb27qx390/+e2dn5vxn5pyZM81/sBW+Dr+Hv8Pbjtr6XoXmzAajw/Cu41X4KdzvqK2v
        jJv7PFwLL8K/4b9wL9wMazD2JjSXDdtJ7IZWdBFOCQ9hLhu2NEbBuwlfwic6ZuJpyJbGyk7E3BbPwiXi
        BZzYCa1HyZc0cRwLy0b4OXR6foXb4RRo0KLZgifbktAxvAuJ+3c8rW4nnILE02x34Sz7qCX1Zyh08Cy8
        DDl8qaMCWjRpNz/CG40KOMACIfsWEnirowKaJxp/wj5eIxg6AAfhQ8jJUfc9BE3abULczhrGHBQoI5yc
        tl+PIWfy1f74qGEdB2PjvYOlIXofEj/uvofoQyQR1xoVDB1I8teQ+FRoabZJnntMXbZZx7RcNJdjDOWi
        HYRzLhqbvlyI11SpUMQYuGSzSwXwZGXnoYK1FGxp0Fp5gEq5VtiWOGFTimI1hOXBsYpa0sdgLhvi1Qen
        4OGTKVlTjoypR+auk/we4idJdoPO9MfQiUJtfcas2ty1H/2HkHxn2YVxK60StVVUY/1RXEXT3AMUipVq
        GMOoNAAAAABJRU5ErkJggg==
</value>
  </data>
</root>